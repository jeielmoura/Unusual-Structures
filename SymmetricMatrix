public class SymmetricMatrix{
    int Array[], MAX, size;
    public SymmetricMatrix(int size, int Matrix[][]){
        int i,j;
        
        this.MAX = (size*size + size)/2;
        this.Array = new int [MAX];
        this.size = size;
        
        i = j = 0;
        
        for(int count = 0; count < MAX; count++){ //[0,MAX-1]
            this.Array[count] = Matrix[i][j];
            if (++j == size)
                j = ++i;
        }
    }
    
    public SymmetricMatrix(int size){
        this.MAX = (size*size + size)/2;
        this.Array = new int [MAX];
    }

    public int getPosition(int i, int j){
        if(j >= i)
            return this.Array[i*(size -i/2 -1/2)+ j];    //position - sum
            //int position = i*size + j;
            //int sum = ((1+i)*i)/2;        sum of arithmetic progression
            
            
        return getPosition(j,i);    //else
    }
    
    public void setPosition(int i, int j, int value){
        if(j >= i)
            this.Array[i*(size -i/2 -1/2)+ j] = value;    //position - aux
            //int position = i*size + j;
            //int aux = ((1+i)*i)/2;    sum of arithmetic progression
            
        else setPosition(j,i,value);
    }
}
